syntax = "proto3";

package Orchestration;

service Orchestrator {
    rpc getInsertEnvironment (Empty) returns (CompleteNodeInformation);
}

service NodeOrchestration {
    rpc addParents (NodeList) returns (Empty);
    rpc addPoolMembers (NodeList) returns (Empty);
    rpc addChildren (NodeList) returns (Empty);

    rpc removeParents (NodeList) returns (Empty);
    rpc removePoolMembers (NodeList) returns (Empty);
    rpc removeChildren (NodeList) returns (Empty);
}

service NodeCommunication {
    rpc heartBeat (NodeId) returns (Empty);

    rpc pushQueueMessages (QueueMessageBulk) returns (Empty);

    rpc pushMessageToParent (QueueMessageBulk) returns (Empty);

    rpc pushMessageToChild (QueueMessageBulk) returns (Empty);

    rpc notifyParent (RoundNumber) returns (Empty);

    //rpc getAck (RoundNumber) returns (RoundAck);

    rpc requestChild (RoundNumber) returns (QueueMessageBulk);

    rpc pushAck (RoundNumber) returns (Empty);
}

service ClientCommunication {
    rpc produceMessage (AbstractMessage) returns (RoundNumber);

    rpc publishMessage (AbstractMessage) returns (RoundNumber);

    rpc triggerRound (RoundNumber) returns (Empty);
}

message NodeInfo {
    NodeId nodeId = 1;
    string nodeIpAddress = 2;
    uint32 port = 3;
    PoolId poolId = 4;
}

message QueueMessageBulk {
    NodeId sendingNode = 1;
    uint64 sequence_number = 2;
    repeated QueueMessage messages = 3;
}

message QueueMessage {
    NodeId sender = 1;
    uint64 sequence_number = 2;
    bytes message_content = 3;
}

message AbstractMessage {
    bytes message_content = 1;
}

message NodeId {
    string nodeId = 1;
}

message PoolId {
    string poolId = 1;
}

message RoundNumber {
    uint64 round = 1;
}

message NodeList {
    repeated NodeInfo nodes = 1;
}

message RoundAck {
    uint32 code = 1;
    string message = 2;
}

message MessageAck {
    bool haveMessages = 1;
}

message CompleteNodeInformation {
    NodeInfo selfInfo = 4;
    NodeList poolMembers = 1;
    NodeList parents = 2;
    NodeList children = 3;
}

message Empty {}